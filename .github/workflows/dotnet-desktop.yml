name: C# AI Chatbot CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest

    env:
      Solution_Name: AIChatbot.sln                         # Replace with your actual solution name
      Test_Project_Path: AIChatbot.Tests\AIChatbot.Tests.csproj  # Path to your test project
      Wap_Project_Directory: AIChatbot.Package            # Directory of the Windows App Packaging project
      Wap_Project_Path: AIChatbot.Package\AIChatbot.Package.wapproj # Path to the WAP project

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Install the .NET SDK
    - name: Install .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    # Add MSBuild to the PATH
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    # Run unit tests
    - name: Run Tests
      run: dotnet test ${{ env.Test_Project_Path }}

    # Restore the application
    - name: Restore Dependencies
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    # Decode and save the signing certificate
    - name: Decode Signing Certificate
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.Base64_Encoded_Pfx }}")
        $certificatePath = Join-Path -Path $env:Wap_Project_Directory -ChildPath AIChatbotWorkflow.pfx
        [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)

    # Build and package the Windows Application
    - name: Build and Package App
      run: msbuild $env:Wap_Project_Path /p:Configuration=$env:Configuration /p:UapAppxPackageBuildMode=$env:Appx_Package_Build_Mode /p:AppxBundle=$env:Appx_Bundle /p:PackageCertificateKeyFile=AIChatbotWorkflow.pfx /p:PackageCertificatePassword=${{ secrets.Pfx_Key }}
      env:
        Appx_Bundle: Always
        Appx_Bundle_Platforms: x86|x64
        Appx_Package_Build_Mode: StoreUpload
        Configuration: ${{ matrix.configuration }}

    # Remove the certificate after use
    - name: Cleanup Signing Certificate
      run: Remove-Item -path $env:Wap_Project_Directory\AIChatbotWorkflow.pfx

    # Upload the final package
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: AIChatbot_MSIX_Package
        path: ${{ env.Wap_Project_Directory }}\AppPackages

