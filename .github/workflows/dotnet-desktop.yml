name: Cybersecurity Chatbot CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]  # We'll only package Release builds

    runs-on: windows-latest

    env:
      Solution_Name: ST10456704_CyberSecurityBot.sln
      Wap_Project_Directory: CybersecurityBot.Package
      Wap_Project_Path: CybersecurityBot.Package\CybersecurityBot.Package.wapproj

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Install .NET Core and .NET Framework compatibility
    - name: Install .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          4.0.8
          8.0.x

    # Setup MSBuild
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    # Restore dependencies
    - name: Restore dependencies
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    # Package the console application
    - name: Package Console App
      run: |
        $outputDir = "bin\${{ matrix.configuration }}\Package"
        New-Item -ItemType Directory -Path $outputDir -Force
        Copy-Item "bin\${{ matrix.configuration }}\net40-windows\*" -Destination $outputDir -Recurse -Force
        Compress-Archive -Path "$outputDir\*" -DestinationPath "bin\${{ matrix.configuration }}\CybersecurityBot.zip" -Force

    # Upload console app package
    - name: Upload Console Package
      uses: actions/upload-artifact@v4
      with:
        name: CybersecurityBot_Console
        path: bin\${{ matrix.configuration }}\CybersecurityBot.zip

    # MSIX packaging steps
    - name: Decode signing certificate
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.Base64_Encoded_Pfx }}")
        $certificatePath = Join-Path -Path $env:Wap_Project_Directory -ChildPath CybersecurityBot.pfx
        [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)

    - name: Create MSIX package
      run: msbuild $env:Wap_Project_Path /p:Configuration=$env:Configuration /p:UapAppxPackageBuildMode=$env:Appx_Package_Build_Mode /p:AppxBundle=$env:Appx_Bundle /p:PackageCertificateKeyFile=CybersecurityBot.pfx /p:PackageCertificatePassword=${{ secrets.Pfx_Key }}
      env:
        Appx_Bundle: Always
        Appx_Bundle_Platforms: x86|x64
        Appx_Package_Build_Mode: StoreUpload
        Configuration: ${{ matrix.configuration }}

    - name: Remove certificate
      run: Remove-Item -path $env:Wap_Project_Directory\CybersecurityBot.pfx

    - name: Upload MSIX package
      uses: actions/upload-artifact@v4
      with:
        name: CybersecurityBot_MSIX
        path: ${{ env.Wap_Project_Directory }}\AppPackages
